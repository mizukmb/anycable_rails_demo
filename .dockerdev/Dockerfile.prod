ARG RUBY_VERSION=2.6.5
FROM ruby:$RUBY_VERSION-slim-buster as base
ARG PG_MAJOR=11
ARG BUNDLER_VERSION=2.1.2
ARG NODE_MAJOR=12
ARG YARN_VERSION=1.13.0
ARG DEBIAN_FRONTEND=noninteractive

COPY .dockerdev/Aptfile /tmp/Aptfile

# Common build dependencies
RUN apt-get update -qq \
  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
  build-essential \
  gnupg2 \
  curl \
  less \
  git \
  && apt-get clean \
  && rm -rf /var/cache/apt/archives/* \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log

# Add PostgreSQL to sources list
RUN curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
  && echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list

# Add NodeJS to sources list
RUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -

# Add Yarn to the sources list
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list

# Application dependencies
# Put all dev dependencies (e.g, vim) in ./.seatrain/Aptfile
COPY .seatrain/Aptfile /tmp/Aptfile
RUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \
  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \
  libpq-dev \
  postgresql-client-$PG_MAJOR \
  nodejs \
  yarn=$YARN_VERSION-1 \
  $(cat /tmp/Aptfile | xargs) && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
  truncate -s 0 /var/log/*log


ENV GEM_HOME=/usr/local/bundle
ENV BUNDLE_PATH=$GEM_HOME
ENV BUNDLE_APP_CONFIG=$BUNDLE_PATH
ENV BUNDLE_BIN=/usr/local/bin
ENV BUNDLE_JOBS=4
ENV BUNDLE_RETRY=3

ENV LANG=C.UTF-8

ENV PATH /app/bin:$PATH

RUN groupadd --gid 1001 nonroot \
  && useradd --uid 1001 --gid nonroot --shell /bin/bash --create-home nonroot

WORKDIR /app
COPY --chown=nonroot:nonroot . /app

# Upgrade RubyGems and install required Bundler version
RUN gem update --system && \
  rm -f /usr/local/bin/ruby/gems/*/specifications/default/bundler-*.gemspec && \
  gem install bundler -v $BUNDLER_VERSION

ENV RAILS_ENV=production
ENV NODE_ENV=production
# Faking it so the image can build
ENV CABLE_URL=fake
ARG RAILS_MASTER_KEY=1

RUN bundle config set --local without 'development test' \
  && bundle install

RUN yarn install \
  && (rm -rf /tmp/* || true)

RUN bundle exec rails assets:precompile \
  && yarn cache clean \
  && (rm -rf /tmp/* || true) \
  # Cleanup
  && rm -rf $BUNDLE_PATH/*.gem \
  && find $BUNDLE_PATH/ruby -name "*.c" -delete \
  && find $BUNDLE_PATH/ruby -name "*.o" -delete \
  # TODO: ADD COMMENT
  && find $BUNDLE_PATH/ruby -name ".git"  -type d -prune -execdir rm -rf {} +

# https://github.com/rubygems/rubygems/issues/3225
RUN rm -rf /usr/local/bundle/ruby/*/cache

USER nonroot

ENV RACK_ENV=production
ENV RAILS_LOG_TO_STDOUT=enabled
ENV RAILS_SERVE_STATIC_FILES=enabled